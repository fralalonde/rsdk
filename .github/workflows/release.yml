name: Build and Release for Windows

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache cargo registry
      - name: use Rust cache
        uses: Swatinem/rust-cache@v2

      # Install Rust
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc

      # Build the project in release mode
      - name: Build the project
        run: cargo build --release --target x86_64-pc-windows-msvc

      # Prepare PowerShell module by processing templates
      - name: Generate PowerShell Module
        run: |
          $Source = "$(pwd)\templates\powershell"
          $Destination = "$(pwd)\target\powershell"
          $ExePath = "rsdk.exe"
          & build\windows\Module-Template.ps1 -SourceDir $Source -DestinationDir $Destination -ExePath $ExePath
        shell: pwsh

      # Package only the binary and auxiliary files into a ZIP
      - name: Create ZIP package
        run: |
          $version = '${{ github.ref_name }}'
          $output = "rsdk-windows-$version.zip"
          Compress-Archive -Path "target/x86_64-pc-windows-msvc/release/rsdk.exe", "target/powershell/*" -DestinationPath $output
        shell: pwsh

      # Upload only the ZIP archive as a binary artifact
      - name: Upload Release ZIP
        uses: actions/upload-artifact@v4
        with:
          name: rsdk-windows-${{ github.ref_name }}
          path: rsdk-windows-${{ github.ref_name }}.zip
