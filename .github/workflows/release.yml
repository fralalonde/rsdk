name: Build and Release for Windows, Debian, and macOS

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build-rsdk:
    strategy:
      fail-fast: false
      matrix:
        config:
          - runs-on: windows-2022
            os: windows
            arch: x86_64
            rust_target: x86_64-pc-windows-msvc
          - runs-on: ubuntu-22.04
            os: linux
            arch: x86_64
            rust_target: x86_64-unknown-linux-gnu
          - runs-on: macos-13
            os: mac
            arch: aarch64
            rust_target: aarch64-apple-darwin
          - runs-on: macos-13
            os: mac
            arch: x86_64
            rust_target: x86_64-apple-darwin

    runs-on: ${{ matrix.config.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.config.rust_target }}
          toolchain: stable

      - name: Use Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build the project
        run: cargo build --release

      - name: Powershell templates
        if: ${{ matrix.config.os == 'windows' }}
        run: |
          $Source = "templates\\powershell"
          $Destination = "target\\dist\\powershell"
          & build\windows\Module-Template.ps1 -SourceDir $Source -DestinationDir $Destination -ExePath "rsdk.exe"
        shell: pwsh

      - name: Windows EXE
        if: ${{ matrix.config.os == 'windows' }}
        run: |
          $Source = "target\\x86_64-pc-windows-msvc\\release\\rsdk.exe"
          $Destination = "target\\dist\\rsdk.exe"
          Move-Item -Path $Source -Destination $Destination -Force
        shell: pwsh

      - name: Unix files packaging
        if: ${{ matrix.config.os == 'linux' || matrix.config.os == 'mac' }}
        run: |
          bash build/unix/generate-plugin.sh templates/bash target/dist/bash rsdk
          bash build/unix/generate-plugin.sh templates/fish target/dist/fish rsdk
          find -name rsdk
          mv target/${{ matrix.config.rust_target }}/release/rsdk target/dist/rsdk
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rsdk-${{ matrix.config.os }}-${{ matrix.config.arch }}-${{ github.ref_name }}
          path: target/dist
